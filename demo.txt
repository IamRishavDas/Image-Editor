1 2 3 
4 5 6 
7 8 9

m x n
3 x 3

7 4 1
8 5 2
9 6 3

    i,j     i,j     i = 0 to m-1
1.  0,0     0,2     j = n - 1 - i
2.  0,1     1,2
3.  0,2     2,2

4.  1,0     0,1
5.  1,1     1,1
6.  1,2     2,1


m x n = 3 x 4
1  2  3  4
5  6  7  8
9 10 11 12

m x n = 4 x 3
 9  5  1 
10  6  2
11  7  3
12  8  4


       0  1  2  3  4
0 -->  1  2  3  4  5
1 -->  5  6  7  8 10
2 --> 11 12 13 14 15 
    original (3 x 5) m x n

       0  1  2
0 --> 11  5  1
1 --> 12  6  2
2 --> 13  7  3
3 --> 14  8  4
4 --> 15 10  5
    rotated (5 x 3) n x m


    mapping (i,j) ---> (j,m - i -1)
    1. 0,0 --> 0,2   
    2. 0,1 --> 1,2
    3. 0,2 --> 2,2
    4. 0,3 --> 3,2
    5. 0,4 --> 4,2

public void rotate(int[][] mat){
    int m = mat.length;
    int n = mat[0].length;
    int[][] temp = new int[n][m];

    for(int i=0; i<m; i++){
        for(int j=0; j<n; j++){
            temp[j][m - i -1] = mat[i][j];
        }
    }

}

